import { Text, Image, TouchableOpacity, View, SafeAreaView } from 'react-native';
import { useState, useEffect } from 'react';
import Collapsible from 'react-native-collapsible';
import { icons } from '@/constants';
import useAppwrite from '@/lib/useAppwrite';
import { getAllResults, getTotalPointsForDistrict, getAllDistrics } from '@/lib/appwrite';

const ScoreBoard = () => {
  // State to track the index of the open section, -1 means no section is open
  const [openIndex, setOpenIndex] = useState(null);
  const { data: latestAllResults } = useAppwrite(getAllResults); 
  const { data: districts } = useAppwrite(() => getAllDistrics());
  
  //getTotalPointsForDistrict(4);

  // Toggle the collapse/expand behavior
  const toggleCollapse = (index) => {
    // If the same section is clicked, close it, otherwise open the clicked section
    setOpenIndex(openIndex === index ? null : index);
  };

  const [districtTotals, setDistrictTotals] = useState({});

  function calculateDistrictTotals(data) {
    // Initialize an object to store district totals
    const districtTotals = {};
    const seconddistrictTotals = {};
    const thirddistrictTotals = {};
  
    // Loop through each data item
    for (const item of data) {
      const districtId = item.firstdistrict;
      const mark = item.firstmark;

      const seconddistrictId= item.seconddistrict
      const secondmark =item.secondmark

      const thirddistrictId= item.thirddistrict
      const thirdmark =item.thirdmark

  
      // Check if district exists in the object
      if (!districtTotals[districtId]) {
        // Initialize total for new district
        districtTotals[districtId] = 0;
      }


      if (!seconddistrictTotals[seconddistrictId]) {
        // Initialize total for new district
        seconddistrictTotals[seconddistrictId] = 0;
      }

      if (!thirddistrictTotals[thirddistrictId]) {
        // Initialize total for new district
        thirddistrictTotals[districtId] = 0;
      }
  
      // Add mark to the total for the current district
      districtTotals[districtId] += mark;
      seconddistrictTotals[seconddistrictId] += secondmark;
      thirddistrictTotals[thirddistrictId] += thirdmark;
    }
  
    // Return the district totals object
    console.log(districtTotals,"first",seconddistrictTotals, "second", thirddistrictTotals,"third");
    return districtTotals;
  }

  useEffect(() => {
    const totals = calculateDistrictTotals(latestAllResults);
    setDistrictTotals(totals);
  }, [latestAllResults]);

  // Mapping district ID to name
  const districtMap = districts.reduce((acc, district) => {
    acc[district.id] = district.name;
    return acc;
  }, {});
  
console.log(districtTotals,"heelskafdjsgf");
  return (
    <SafeAreaView className="px-4 my-6 bg-primary h-full">
      <Text className="text-2xl text-white font-psemibold">ScoreBoard</Text>
      <View>
        {Object.entries(districtTotals).map(([districtId, totalMark], index) => (
          <View key={districtId}>
            <TouchableOpacity
              onPress={() => toggleCollapse(index)}
              style={{
                backgroundColor: '#4CAF50', // Green button
                padding: 12,
                borderRadius: 5,
                marginVertical: 10,
                alignItems: 'center',
                flexDirection: 'row', // Align icon and text horizontally
                justifyContent: 'space-between', // Space out text and icon
              }}
            >
              <Text style={{ color: 'white', fontSize: 16 }}>
                Click to {openIndex === index ? 'collapse' : 'expand'} {districtMap[districtId] || `District ${districtId}`}
              </Text>

              <Image
                source={openIndex === index ? icons.play : icons.plus} // Change icon based on open/close state
                style={{ width: 24, height: 24, tintColor: 'white' }}
              />
            </TouchableOpacity>

            <Collapsible collapsed={openIndex !== index}>
              <View style={{ backgroundColor: 'lightgray', padding: 10 }}>
                <Text>{districtMap[districtId] || `District ${districtId}`} Total Marks: {totalMark}</Text>
              </View>
            </Collapsible>
          </View>
        ))}
      </View>
    </SafeAreaView>
  );
};

export default ScoreBoard;
